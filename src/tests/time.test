#!/usr/bin/env python3

import os
from os import path
from test_helpers import check_call


def read_time(timefile_path):
    with open(timefile_path) as fh:
        return fh.readline().strip()


def main():
    # remove timefile if already exists
    abs_builddir = os.environ['abs_builddir']
    test_tmpdir = path.join(abs_builddir, 'test_tmpdir')
    output_timefile = path.join(test_tmpdir, 'timefile')
    try:
        os.remove(output_timefile)
    except OSError:
        pass

    # path of the "time" program
    abs_builddir = os.environ['abs_builddir']
    time = path.abspath(path.join(abs_builddir, os.pardir, 'time', 'time'))

    # run "time" and check the output timefile
    check_call([time, '-o', output_timefile, '180000.m4s'])
    if read_time(output_timefile) != '1970-01-01T00:00:02Z':
        exit('output timefile is wrong')

    # run "time": timefile should increase
    check_call([time, '-o', output_timefile, '360000.m4s'])
    if read_time(output_timefile) != '1970-01-01T00:00:04Z':
        exit('output timefile is wrong')

    # run "time": timefile should not decrease
    check_call([time, '-o', output_timefile, '180000.m4s'])
    if read_time(output_timefile) != '1970-01-01T00:00:04Z':
        exit('output timefile is wrong')


if __name__ == '__main__':
    main()
