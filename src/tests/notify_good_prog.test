#!/usr/bin/python3

import os
from os import path
import time
from test_helpers import (Popen, create_tmp_and_move_to, timeout,
                          make_sure_path_exists)


@timeout(1)
def check_file_existence(file_to_check):
    # busy wait for at most 1 seconds
    while True:
        if path.isfile(file_to_check):
            return True
        time.sleep(0.1)


def change_extension(p, ext):
    return path.splitext(p)[0] + ext


def sleep_and_check_nonexistence(file_to_check):
    time.sleep(0.1)
    if path.exists(file_to_check):
        raise Exception('{} should not exist'.format(file_to_check))


def main():
    abs_srcdir = os.environ['abs_srcdir']
    abs_builddir = os.environ['abs_builddir']
    test_tmpdir = path.join(abs_builddir, 'test_tmpdir')

    notifier_srcdir = path.join(test_tmpdir, 'notifier_good_srcdir')
    notifier_dstdir = path.join(test_tmpdir, 'notifier_good_dstdir')
    for directory in [notifier_srcdir, notifier_dstdir]:
        make_sure_path_exists(directory)

    notifier = path.abspath(
        path.join(abs_builddir, os.pardir, 'notifier', 'notifier'))

    # create pre-existing files before running notifier
    existing_test_file = create_tmp_and_move_to(
            test_tmpdir, notifier_srcdir, '.ext1')

    # run a notifier that will call the "good" program (mv)
    good_prog = path.join(abs_srcdir, '/bin/mv')
    cmd = [notifier, notifier_srcdir, '.ext1', '--check',
           notifier_dstdir, '.ext2', '--tmp', test_tmpdir, '--exec', good_prog]
    notifier_proc = Popen(cmd)

    # expect pre-existing files to be processed
    expected_out_file = change_extension(existing_test_file, '.ext2')
    check_file_existence(path.join(notifier_dstdir, expected_out_file))

    # create and move a tmp file; expect it to be processed
    tmp_filename = create_tmp_and_move_to(test_tmpdir, notifier_srcdir, '.ext1')
    expected_out_file = change_extension(tmp_filename, '.ext2')
    check_file_existence(path.join(notifier_dstdir, expected_out_file))

    # create and move a tmp file with the wrong extension; expect no output
    tmp_filename = create_tmp_and_move_to(test_tmpdir, notifier_srcdir, '.ext3')
    unexpected_out_file = change_extension(tmp_filename, '.ext2')
    sleep_and_check_nonexistence(path.join(notifier_dstdir, unexpected_out_file))

    if notifier_proc:
        notifier_proc.kill()


if __name__ == '__main__':
    main()
